# Production Docker Compose Configuration
version: "3.8"

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: capitalpay-mongodb-prod
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_ROOT_USER:-admin}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_ROOT_PASSWORD:-capitalpayadmin123}
      MONGO_INITDB_DATABASE: capitalpay
    ports:
      - "27017:27017"
    volumes:
      - mongodb_prod_data:/data/db
      - ./mongodb-init:/docker-entrypoint-initdb.d
    networks:
      - capitalpay-prod-network
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh localhost:27017/capitalpay --quiet
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Backend API
  backend:
    build:
      context: ./capitalpay-backend
      dockerfile: Dockerfile
    container_name: capitalpay-backend-prod
    restart: always
    environment:
      NODE_ENV: production
      PORT: 5000
      MONGODB_URI: mongodb://${MONGO_ROOT_USER:-admin}:${MONGO_ROOT_PASSWORD:-capitalpayadmin123}@mongodb:27017/capitalpay?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production-2024}
      JWT_EXPIRE: ${JWT_EXPIRE:-7d}
      ADMIN_EMAIL: ${ADMIN_EMAIL:-admin@capitalpay.com}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD:-admin123}
    ports:
      - "5000:5000"
    depends_on:
      mongodb:
        condition: service_healthy
    volumes:
      - backend_prod_uploads:/app/uploads
    networks:
      - capitalpay-prod-network
    healthcheck:
      test:
        [
          "CMD",
          "node",
          "-e",
          "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 40s

  # Frontend React App
  frontend:
    build:
      context: ./capitalpay-frontend
      dockerfile: Dockerfile.prod
      args:
        VITE_API_URL: ${VITE_API_URL:-http://localhost:5000/api}
    container_name: capitalpay-frontend-prod
    restart: always
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - capitalpay-prod-network
    healthcheck:
      test:
        [
          "CMD",
          "wget",
          "--no-verbose",
          "--tries=1",
          "--spider",
          "http://localhost/",
        ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 30s

volumes:
  mongodb_prod_data:
    driver: local
  backend_prod_uploads:
    driver: local

networks:
  capitalpay-prod-network:
    driver: bridge
